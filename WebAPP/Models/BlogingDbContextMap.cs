// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Web.Model.APP.Blogging;
using Web.Model.APP.Master; 

namespace Web.APP.Models
{
    public partial class BlogingDbContextMap : DbContext
    {
        public BlogingDbContextMap()
        {
        }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            optionsBuilder.UseSqlServer(@"data source=localhost;initial catalog=BlogingDb;persist security info=True; Trusted_Connection=False;Encrypt=false;TrustServerCertificate=True; user id=sa;password=1qaz2wsx1@;");
        }

        public BlogingDbContextMap(DbContextOptions<BlogingDbContextMap> options)
            : base(options)
        {
        }

        public virtual DbSet<Blog> Blogs { get; set; }
        public virtual DbSet<Post> Posts { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Blog>(entity =>
            {
                entity.HasKey(e => e.BlogId);

                entity.Property(e => e.Url).IsRequired();
            });

            modelBuilder.Entity<Post>(entity =>
            {
                entity.HasKey(e => e.PostId);

                entity.HasIndex(e => e.BlogId, "IX_Posts_BlogId");

                entity.Property(e => e.Category).IsRequired();

                entity.Property(e => e.Content).IsRequired();

                entity.Property(e => e.Title).IsRequired();

                entity.HasOne(d => d.Blog)
                    .WithMany(p => p.Posts)
                    .HasForeignKey(d => d.BlogId);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);

        public DbSet<Web.Model.APP.Blogging.Blog>? Blog { get; set; }

        public DbSet<Web.Model.APP.Master.Category>? Category { get; set; }
    }
}